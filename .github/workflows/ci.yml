name: CI
on:
  push:
    paths:
      - '.github/workflows/ci.yml'
      - 'packages/**'
      - 'package.json'
      - 'yarn.lock'
      - 'demo/**'
      - '!**.md'
      - '!.changeset/**'
env:
  CI: true
jobs:
  check:
    name: Build, lint, and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn modules
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Check lint
        run: yarn lint

      - name: Check pretty
        run: yarn pretty:check

  build_packages:
    name: Build packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Setup build cache
        uses: actions/cache@v2
        id: build-packages-cache
        with:
          path: packages/**/dist
          key: ${{ runner.os }}-build-${{ hashFiles('packages/') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build
        if: steps.build-packages-cache.outputs.cache-hit != 'true'
        run: yarn build

  build_demo:
    name: Build demo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Setup build cache
        uses: actions/cache@v2
        id: build-demo-cache
        with:
          path: demo/dist
          key: ${{ runner.os }}-build-${{ hashFiles('demo/') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build
        if: steps.build-demo-cache.outputs.cache-hit != 'true'
        run: yarn build
